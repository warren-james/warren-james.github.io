library(tidyverse)
library(brms)
# A simpson's paradox example
df_treat <- tibble(Sex = rep(c("Male", "Female"), each = c(87 + 270, 192 + 80)))
# A simpson's paradox example
df_treat <- tibble(Sex = rep(c("Male", "Female"), c(87 + 270, 192 + 80)))
# A simpson's paradox example
df_treat <- tibble(Sex = rep(c("Male", "Female"), c(87 + 270, 263 + 80)))
# A simpson's paradox example
df_treat <- tibble(Sex = rep(c("Male", "Female"), c(87 + 270, 263 + 80)),
tookDrug = rep(c(1, 0, 1, 0), c(87, 270, 263, 80)))
# A simpson's paradox example
df_treat <- tibble(Sex      = rep(c("Male",   "Female"),
c(87 + 270,  263 + 80)),
tookDrug = rep(c(1,  0,   1,   0),
c(87, 270, 263, 80)),
recover  = rep(c(1,  0,       1,   0,         1,   0,         1,  0),
c(81, 87 - 81, 234, 270 - 234, 192, 263 - 192, 55, 80 - 55)))
df_treat %>%
group_by(Sex, tookDrug, recover) %>%
summarise(n = n())
m1 <- brm(recover ~ tookDrug,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m2 <- brm(recover ~ tookDrug + Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m3 <- brm(recover ~ tookDrug * Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
summary(m1)
summary(m2)
summary(m3)
loo_compare(loo(m1), loo(m2), loo(m3))
library(tidyverse)
library(brms)
# A simpson's paradox example
df_treat <- tibble(Sex      = rep(c("Male",   "Female"),
c(87 + 270,  263 + 80)),
tookDrug = rep(c("yes", "no", "yes", "no"),
c( 87,    270,  263,   80)),
recover  = rep(c(1,  0,       1,   0,         1,   0,         1,  0),
c(81, 87 - 81, 234, 270 - 234, 192, 263 - 192, 55, 80 - 55)))
m1 <- brm(recover ~ tookDrug,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m2 <- brm(recover ~ tookDrug + Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m3 <- brm(recover ~ tookDrug * Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
summary(m1)
summary(m2)
summary(m3)
exp(1.08)
exp(.2)
exp(.2 + 1.08 + .6)
loo_compare(loo(m1), loo(m2), loo(m3))
pp_check(m2, type = "loo_intervals")
plot(marginal_effects(m1))
plot(conditional_effecs(m1))
plot(conditional_effects(m1))
plot(conditional_effects(m2))
plot(conditional_effects(m3))
pp_check(m3)
pp_check(m2)
pp_check(m1)
library(tidyverse)
library(brms)
# A simpson's paradox example
df_treat <- tibble(Sex      = rep(c("Male",   "Female"),
c(87 + 270,  263 + 80)),
tookDrug = rep(c("yes", "no", "yes", "no"),
c( 87,    270,  263,   80)),
recover  = rep(c(1,  0,       1,   0,         1,   0,         1,  0),
c(81, 87 - 81, 234, 270 - 234, 192, 263 - 192, 55, 80 - 55)))
m1 <- brm(recover ~ tookDrug,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m2 <- brm(recover ~ Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m3 <- brm(recover ~ tookDrug + Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
m4 <- brm(recover ~ tookDrug * Sex,
family = "bernoulli",
data = df_treat,
chains = 1,
iter = 2000)
summary(m1)
summary(m2)
summary(m3)
summary(m4)
loo_compare(loo(m1), loo(m2), loo(m3), loo(m4))
df_treat %>%
group_by(tookDrug, recover) %>%
summarise(n = n())
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n())
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0((n/total * 100, "%", "(", n, " / ", total, ")")))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0((n/total * 100), "%", "(", n, " / ", total, ")")))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0((n/total * 100), "%", "(", n, " / ", total, ")"))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0(round(n/total * 100, 2), "%", "(", n, " / ", total, ")"))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0(round(n/total * 100, 2), "%", " (", n, " / ", total, ")"))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0(format(round(n/total * 100, 2), nsmall = 2), "%", " (", n, " / ", total, ")"))
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0(format(round(n/total * 100, 2), nsmall = 2), "%", " (", n, " / ", total, ")")) %>%
spread(tookDrug, label)
df_treat %>%
group_by(tookDrug, Sex, recover) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(tookDrug, Sex) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(label = paste0(format(round(n/total * 100, 2), nsmall = 2), "%", " (", n, " / ", total, ")")) %>%
select(-c(n, total)) %>% spread(tookDrug, label)
rm(list = ls())
dir.create("about")
dir.create("supMat")
dir.create("supMat/2024_06_IdentifyingKeySystemComponents")
dir.create("supMat/2024_06_IdentifyingKeySystemComponents/data")
dir.create("supMat/2024_06_IdentifyingKeySystemComponents/Surveys")
dir.create("functions")
